name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  DOCKER_FILE: Dockerfile
  DOCKER_REGISTRY: ghcr.io
  OWNER: pagopa

jobs:
  docker_release:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: docker_build
        env:
          NODE_VERSION: '${{ steps.node_version.outputs.NODE_VERSION }}'
        run: |
          GITHUB_REPO=$(echo "${{ github.repository }}" | tr '[A-Z]' '[a-z]')
          docker build . --file $DOCKER_FILE --tag $GITHUB_REPO \
            --build-arg OWNER=$OWNER \
            --build-arg REPO=$GITHUB_REPO

      - name: docker_login
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin

      - name: docker_push
        run: |
          GITHUB_REPO=$(echo "${{ github.repository }}" | tr '[A-Z]' '[a-z]')
          IMAGE_ID=$DOCKER_REGISTRY/$GITHUB_REPO
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $GITHUB_REPO $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
